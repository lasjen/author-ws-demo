/**
 * This class is generated by jOOQ
 */
package no.rightcloud.demo.author.jooq.tables;


import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import no.rightcloud.demo.author.jooq.Devdata;
import no.rightcloud.demo.author.jooq.Keys;
import no.rightcloud.demo.author.jooq.tables.records.PmtInstRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PmtInst extends TableImpl<PmtInstRecord> {

    private static final long serialVersionUID = 409813777;

    /**
     * The reference instance of <code>DEVDATA.PMT_INST</code>
     */
    public static final PmtInst PMT_INST = new PmtInst();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PmtInstRecord> getRecordType() {
        return PmtInstRecord.class;
    }

    /**
     * The column <code>DEVDATA.PMT_INST.PMT_INST_ID</code>.
     */
    public final TableField<PmtInstRecord, BigInteger> PMT_INST_ID = createField("PMT_INST_ID", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(20), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.FK_PMT_INFO_ID</code>.
     */
    public final TableField<PmtInstRecord, BigInteger> FK_PMT_INFO_ID = createField("FK_PMT_INFO_ID", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(20), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.INSTRUCTION_ID</code>.
     */
    public final TableField<PmtInstRecord, String> INSTRUCTION_ID = createField("INSTRUCTION_ID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.ENDTOENDID</code>.
     */
    public final TableField<PmtInstRecord, String> ENDTOENDID = createField("ENDTOENDID", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.INSTD_AMT</code>.
     */
    public final TableField<PmtInstRecord, BigDecimal> INSTD_AMT = createField("INSTD_AMT", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.INSTD_AMT_CCY</code>.
     */
    public final TableField<PmtInstRecord, String> INSTD_AMT_CCY = createField("INSTD_AMT_CCY", org.jooq.impl.SQLDataType.VARCHAR.length(3), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.CRDTR_NAME</code>.
     */
    public final TableField<PmtInstRecord, String> CRDTR_NAME = createField("CRDTR_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(70), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.CRDTR_ACCNT</code>.
     */
    public final TableField<PmtInstRecord, String> CRDTR_ACCNT = createField("CRDTR_ACCNT", org.jooq.impl.SQLDataType.VARCHAR.length(35), this, "");

    /**
     * The column <code>DEVDATA.PMT_INST.CRDTR_ACCNT_IBAN</code>.
     */
    public final TableField<PmtInstRecord, BigDecimal> CRDTR_ACCNT_IBAN = createField("CRDTR_ACCNT_IBAN", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * Create a <code>DEVDATA.PMT_INST</code> table reference
     */
    public PmtInst() {
        this("PMT_INST", null);
    }

    /**
     * Create an aliased <code>DEVDATA.PMT_INST</code> table reference
     */
    public PmtInst(String alias) {
        this(alias, PMT_INST);
    }

    private PmtInst(String alias, Table<PmtInstRecord> aliased) {
        this(alias, aliased, null);
    }

    private PmtInst(String alias, Table<PmtInstRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Devdata.DEVDATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PmtInstRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PmtInstRecord, ?>>asList(Keys.PMT_INST_INFO_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PmtInst as(String alias) {
        return new PmtInst(alias, this);
    }

    /**
     * Rename this table
     */
    public PmtInst rename(String name) {
        return new PmtInst(name, null);
    }
}
