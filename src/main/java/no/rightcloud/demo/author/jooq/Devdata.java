/**
 * This class is generated by jOOQ
 */
package no.rightcloud.demo.author.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import no.rightcloud.demo.author.jooq.tables.PmtInfo;
import no.rightcloud.demo.author.jooq.tables.Author;
import no.rightcloud.demo.author.jooq.tables.PmtHead;
import no.rightcloud.demo.author.jooq.tables.PmtInst;
import no.rightcloud.demo.author.jooq.tables.SchemaVersion;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Devdata extends SchemaImpl {

    private static final long serialVersionUID = -2051946649;

    /**
     * The reference instance of <code>DEVDATA</code>
     */
    public static final Devdata DEVDATA = new Devdata();

    /**
     * The table <code>DEVDATA.AUTHOR</code>.
     */
    public final Author AUTHOR = Author.AUTHOR;

    /**
     * The table <code>DEVDATA.PMT_HEAD</code>.
     */
    public final PmtHead PMT_HEAD = PmtHead.PMT_HEAD;

    /**
     * The table <code>DEVDATA.PMT_INFO</code>.
     */
    public final PmtInfo PMT_INFO = PmtInfo.PMT_INFO;

    /**
     * The table <code>DEVDATA.PMT_INST</code>.
     */
    public final PmtInst PMT_INST = PmtInst.PMT_INST;

    /**
     * The table <code>DEVDATA.SCHEMA_VERSION</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = SchemaVersion.SCHEMA_VERSION;

    /**
     * No further instances allowed
     */
    private Devdata() {
        super("DEVDATA", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.AUTHOR_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Author.AUTHOR,
            PmtHead.PMT_HEAD,
            PmtInfo.PMT_INFO,
            PmtInst.PMT_INST,
            SchemaVersion.SCHEMA_VERSION);
    }
}
